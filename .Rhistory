load("~/DSA/RDA/Shiny/Project/.RData")
?get_decennial
library(ggplot2)
library(readr)
library(rgdal)
library(ggmap)
library(leaflet)
library(tidyverse)
library(tidycensus)
?get_decennial
v15 <- load_variables(2015, "acs5", cache = TRUE)
View(v15)
age <- get_decennial(geography = "county", variables = "B01002_001E", year = 2015)
census_api_key("ab278550a1784132f981997c48014f5614b9404b")
age <- get_decennial(geography = "county", variables = "B01002_001E", year = 2015)
age <- get_decennial(geography = "county", variables = "B01002_001", year = 2015)
age <- get_decennial(geography = "county", variables = "B01002_001", year = 2014)
age <- get_decennial(geography = "county", variables = "B01002_001", year = 2010)
v15 <- load_variables(2015, "sf1", cache = TRUE)
age <- get_acs(geography = "county", variables = "B01002_001", year = 2014)
View(age)
cancercounties <- read_csv("./cancercounties.csv")
counties <- readOGR('./countyshapes/cb_2016_us_county_20m.shp',
layer = 'cb_2016_us_county_20m')
colnames(cancercounties)[2] = "GEOID"
colnames(cancercounties)[4] = "cases"
View(cancercounties)
library(maps)
data(countyMapEnv)
countyMapEnv
maps::map(database = "county")
counties.df <- as(counties, "data.frame")
counties.df
View(counties.df)
library(maptools)
cancercounties <- read_csv("./cancercounties.csv")
setwd("~/DSA/RDA/Shiny/Project")
cancercounties <- read_csv("./cancercounties.csv")
counties <- readOGR('./countyshapes/cb_2016_us_county_20m.shp',
layer = 'cb_2016_us_county_20m')
counties.df <- as(counties, "data.frame")
counties.df
View(counties.df)
?readshapelines
?readShapeLines
co <- readShapeLines('./countyshapes/cb_2016_us_county_20m')
co
co.df <- as(co, "data.frame")
View(co.df)
rm(countyMapEnv)
df = merge(counties, cancercounties, by="GEOID")
cancercounties <- read_csv("./cancercounties.csv")
counties <- readOGR('./countyshapes/cb_2016_us_county_20m.shp',
layer = 'cb_2016_us_county_20m')
colnames(cancercounties)[2] = "GEOID"
colnames(cancercounties)[4] = "cases"
df = merge(counties, cancercounties, by="GEOID")
counties.df <- as(df, "data.frame")
View(counties.df)
leaflet(df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", as.numeric(cases))(as.numeric(cases)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
cancercounties$cases
cancercounties <- fread("./cancercounties.csv")
library(data.table)
cancercounties <- fread("./cancercounties.csv")
View(cancercounties)
D"
colnames(cancercountie
D"
colnames(cancercountie
colnames(cancercounties)[2] = "GEOID"
colnames(cancercounties)[4] = "cases"
View(cancercounties)
colnames(cancercounties)[2] = "GEOID"
colnames(cancercounties)[4] = "cases"
colnames(cancercounties)
View(cancercounties)
cancercounties[setDT(age), estimate := i.age, on="GEOID"]
class(cancercounties$GEOID)
age$GEOID = as.integer(age$GEOID)
cancercounties[setDT(age), estimate := i.age, on="GEOID"]
cancercounties[setDT(age), age := i.estimate, on="GEOID"]
View(cancercounties)
df = merge(counties, cancercounties, by="GEOID")
leaflet(df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", as.numeric(cases))(as.numeric(cases)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", as.numeric(age))(as.numeric(age)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
age$GEOID = as.character(age$GEOID)
age <- get_acs(geography = "county", variables = "B01002_001", year = 2014)
age$GEOID = as.character(age$GEOID)
age <- get_acs(geography = "county", variables = "B01002_001", year = 2014)
cancercounties$GEOID = as.character(cancercounties$GEOID)
cancercounties[setDT(age), age := i.estimate, on="GEOID"]
age <- get_acs(geography = "county", variables = "B01002_001", year = 2014)
cancercounties[setDT(age), age := i.estimate, on="GEOID"]
class(age)
cancercounties[setDT(age), age := i.estimate, on="GEOID"]
ages <- get_acs(geography = "county", variables = "B01002_001", year = 2014)
class(ages)
cancercounties[setDT(ages), age := i.estimate, on="GEOID"]
df = merge(counties, cancercounties, by="GEOID")
leaflet(df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", as.numeric(cases))(as.numeric(cases)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
cancercounties$GEOID
ages$GEOID
cancercounties %>%
arrange(GEOID)
cancercounties %>%
arrange(GEOID)
cc = cancercounties %>%
select(GEOID, cases)
library(ggplot2)
library(readr)
library(rgdal)
library(ggmap)
library(leaflet)
library(tidyverse)
library(tidycensus)
library(maptools)
cc = cancercounties %>%
select(GEOID, cases)
cancercounties <- fread("./cancercounties.csv")
colnames(cancercounties)[2] = "GEOID"
colnames(cancercounties)[4] = "cases"
cancercounties$GEOID = as.character(cancercounties$GEOID)
cc = cancercounties %>%
select(GEOID, cases)
class(cancercounties)
cc = cancercounties %>%
transmute(GEOID, cases)
?drop
select(cancercounties, cases)
select(ages, age)
select(ages, estimate)
class(ages)
class(cancercounties)
View(cancercounties)
cancercounties[, c("GEOID", "cases")]
cc = cancercounties[, c("GEOID", "cases")]
class(cc)
cc[setDT(ages), age := i.estimate, on="GEOID"]
cc
df = merge(counties, cc, by="GEOID")
leaflet(df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", as.numeric(cases))(as.numeric(cases)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
counties$GEOID
counties$GEOID[counties$GEOID[[1]] == 0]
counties$GEOID[counties$GEOID[[1:2]] == 6]
counties$GEOID[counties$GEOID[[2]] == 6]
counties$GEOID
counties$GEOID[1]
counties$GEOID[[1]]
counties$GEOID[[2]]
counties$GEOID[2
counties$GEOID[2]
counties$GEOID[2]
counties$GEOID[1][2]
counties$GEOID[1][[2]]
class(counties$GEOID[1])
class(cc$GEOID[1])
?readOGR
?readOGR
?readOGR
counties <- readOGR('./countyshapes/cb_2016_us_county_20m.shp',
layer = 'cb_2016_us_county_20m',
stringsAsFactors = FALSE)
class(cc$GEOID[1])
class(counties$GEOID[1])
df = merge(counties, cc, by="GEOID")
leaflet(df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", as.numeric(cases))(as.numeric(cases)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", as.numeric(age))(as.numeric(age)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
library(tigris)
counties <- counties()
counties.df <- as(counties, "data.frame")
counties.df
View(counties.df)
df = merge(counties, cc, by="GEOID")
leaflet(df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", as.numeric(cases))(as.numeric(cases)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
leaflet(df) %>%
addProviderTiles("CartoDB.Positron") %>%
addPolygons(color = "#444444", weight = 0.5, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", as.numeric(age))(as.numeric(age)),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE))
